// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

// %SRC_VERSION%: 2

#pragma once

#include <PrefabBase.h>
#include <PrefabDescriptor.h>
#include <lumin/ui/node/UiButton.h>
#include <lumin/ui/node/UiText.h>

class ExtendedPrefabManager;

namespace prefabs {

  class ButtonsLayoutPrefab;

  class ButtonsLayoutPrefabBase : public PrefabBase {
  public:

    static const PrefabDescriptor& getClassPrefabDescriptor();

  public:

    struct Names {
    public:

      static const std::string& BLS_Label1;
      static const std::string& BLS_Button1;
      static const std::string& BES_Label1;
      static const std::string& BLS_Button2;
      static const std::string& BES_Label2;
      static const std::string& BLS_Button3;
      static const std::string& BES_Label3;
      static const std::string& BLS_Button4;
      static const std::string& BES_Label4;
      static const std::string& BLS_Button5;
      static const std::string& BES_Label5;
      static const std::string& BLS_Button6;
      static const std::string& BES_Label6;
      static const std::string& BLS_Label8;
      static const std::string& CBS_Button;
      static const std::string& BES_Label7;
      static const std::string& RCB_Button;
      static const std::string& BES_Label8;
      static const std::string& SB_Button;
      static const std::string& BES_Label9;

    protected:
      Names() = delete;
      ~Names() = delete;
    };

  public:

    const PrefabDescriptor& getPrefabDescriptor() const override;
    const NodeReferences& getNodeReferences() const override;

    virtual lumin::ui::UiText* getBLS_Label1();
    virtual lumin::ui::UiButton* getBLS_Button1();
    virtual lumin::ui::UiText* getBES_Label1();
    virtual lumin::ui::UiButton* getBLS_Button2();
    virtual lumin::ui::UiText* getBES_Label2();
    virtual lumin::ui::UiButton* getBLS_Button3();
    virtual lumin::ui::UiText* getBES_Label3();
    virtual lumin::ui::UiButton* getBLS_Button4();
    virtual lumin::ui::UiText* getBES_Label4();
    virtual lumin::ui::UiButton* getBLS_Button5();
    virtual lumin::ui::UiText* getBES_Label5();
    virtual lumin::ui::UiButton* getBLS_Button6();
    virtual lumin::ui::UiText* getBES_Label6();
    virtual lumin::ui::UiText* getBLS_Label8();
    virtual lumin::ui::UiButton* getCBS_Button();
    virtual lumin::ui::UiText* getBES_Label7();
    virtual lumin::ui::UiButton* getRCB_Button();
    virtual lumin::ui::UiText* getBES_Label8();
    virtual lumin::ui::UiButton* getSB_Button();
    virtual lumin::ui::UiText* getBES_Label9();


  protected:

    lumin::ui::UiText* BLS_Label1;
    lumin::ui::UiButton* BLS_Button1;
    lumin::ui::UiText* BES_Label1;
    lumin::ui::UiButton* BLS_Button2;
    lumin::ui::UiText* BES_Label2;
    lumin::ui::UiButton* BLS_Button3;
    lumin::ui::UiText* BES_Label3;
    lumin::ui::UiButton* BLS_Button4;
    lumin::ui::UiText* BES_Label4;
    lumin::ui::UiButton* BLS_Button5;
    lumin::ui::UiText* BES_Label5;
    lumin::ui::UiButton* BLS_Button6;
    lumin::ui::UiText* BES_Label6;
    lumin::ui::UiText* BLS_Label8;
    lumin::ui::UiButton* CBS_Button;
    lumin::ui::UiText* BES_Label7;
    lumin::ui::UiButton* RCB_Button;
    lumin::ui::UiText* BES_Label8;
    lumin::ui::UiButton* SB_Button;
    lumin::ui::UiText* BES_Label9;

    virtual void BLS_Button1_IconOnlyButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button1_IconOnlyButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button1_IconOnlyButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button1_IconOnlyButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label1_IconOnlyLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void BLS_Button2_TextOnlyButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button2_TextOnlyButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button2_TextOnlyButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button2_TextOnlyButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label2_TextOnlyLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void BLS_Button3_IconWithLabelButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button3_IconWithLabelButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button3_IconWithLabelButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button3_IconWithLabelButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label3_IconWithLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void BLS_Button4_TextWithIconButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button4_TextWithIconButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button4_TextWithIconButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button4_TextWithIconButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label4_TextWithIconLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void BLS_Button5_TextOnlyOutlinedButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button5_TextOnlyOutlinedButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button5_TextOnlyOutlinedButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button5_TextOnlyOutlinedButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label5_TextOnlyOutlinedLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void BLS_Button6_TextWithIconOutlinedButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button6_TextWithIconOutlinedButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button6_TextWithIconOutlinedButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void BLS_Button6_TextWithIconOutlinedButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label6_TextWithIconOutlinedLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void CBS_Button_CapsuleButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void CBS_Button_CapsuleButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void CBS_Button_CapsuleButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void CBS_Button_CapsuleButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label7_CapsuleLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void RCB_Button_RoundedCornerButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void RCB_Button_RoundedCornerButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void RCB_Button_RoundedCornerButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void RCB_Button_RoundedCornerButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label8_RoundedCornerLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;
    virtual void SB_Button_SquareButtonHandlers_onHoverEnter(const lumin::ui::UiEventData& data) = 0;
    virtual void SB_Button_SquareButtonHandlers_onHoverExit(const lumin::ui::UiEventData& data) = 0;
    virtual void SB_Button_SquareButtonHandlers_onActivate(const lumin::ui::UiEventData& data) = 0;
    virtual void SB_Button_SquareButtonHandlers_onLongPress(const lumin::ui::UiEventData& data) = 0;
    virtual void BES_Label9_SquareLabelHandler(const lumin::ui::UiEventData& data, const float dTime) = 0;

  private:

    friend class ::ExtendedPrefabManager;
    friend class ButtonsLayoutPrefab;

    static PrefabBase* createPrefab(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root);

    static const PrefabDescriptor classPrefabDescriptor_;
    static const NodeReferences classNodeReferences_;

    ButtonsLayoutPrefabBase(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root);
    ~ButtonsLayoutPrefabBase() override;
  };
}
