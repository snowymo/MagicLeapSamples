// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

// %SRC_VERSION%: 2

#include <ButtonsLayoutPrefabBase.h>
#include <ButtonsLayoutPrefab.h>

namespace prefabs {

  const PrefabDescriptor& ButtonsLayoutPrefabBase::getClassPrefabDescriptor() {
    return classPrefabDescriptor_;
  }

  PrefabBase* ButtonsLayoutPrefabBase::createPrefab(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root) {
    PrefabBase* const prefab = new ButtonsLayoutPrefab(extendedPrefabManager, root);
    return prefab;
  }

  ButtonsLayoutPrefabBase::ButtonsLayoutPrefabBase(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root)
  : PrefabBase(extendedPrefabManager, root) {

    BLS_Label1 = lumin::ui::UiText::CastFrom(root->findChild(Names::BLS_Label1));
    BLS_Button1 = lumin::ui::UiButton::CastFrom(root->findChild(Names::BLS_Button1));
    BES_Label1 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label1));
    BLS_Button2 = lumin::ui::UiButton::CastFrom(root->findChild(Names::BLS_Button2));
    BES_Label2 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label2));
    BLS_Button3 = lumin::ui::UiButton::CastFrom(root->findChild(Names::BLS_Button3));
    BES_Label3 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label3));
    BLS_Button4 = lumin::ui::UiButton::CastFrom(root->findChild(Names::BLS_Button4));
    BES_Label4 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label4));
    BLS_Button5 = lumin::ui::UiButton::CastFrom(root->findChild(Names::BLS_Button5));
    BES_Label5 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label5));
    BLS_Button6 = lumin::ui::UiButton::CastFrom(root->findChild(Names::BLS_Button6));
    BES_Label6 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label6));
    BLS_Label8 = lumin::ui::UiText::CastFrom(root->findChild(Names::BLS_Label8));
    CBS_Button = lumin::ui::UiButton::CastFrom(root->findChild(Names::CBS_Button));
    BES_Label7 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label7));
    RCB_Button = lumin::ui::UiButton::CastFrom(root->findChild(Names::RCB_Button));
    BES_Label8 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label8));
    SB_Button = lumin::ui::UiButton::CastFrom(root->findChild(Names::SB_Button));
    BES_Label9 = lumin::ui::UiText::CastFrom(root->findChild(Names::BES_Label9));

    BLS_Button1->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button1_IconOnlyButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    BLS_Button1->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button1_IconOnlyButtonHandlers_onHoverExit, this, std::placeholders::_1));
    BLS_Button1->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button1_IconOnlyButtonHandlers_onActivate, this, std::placeholders::_1));
    BLS_Button1->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button1_IconOnlyButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label1->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label1_IconOnlyLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    BLS_Button2->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button2_TextOnlyButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    BLS_Button2->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button2_TextOnlyButtonHandlers_onHoverExit, this, std::placeholders::_1));
    BLS_Button2->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button2_TextOnlyButtonHandlers_onActivate, this, std::placeholders::_1));
    BLS_Button2->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button2_TextOnlyButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label2->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label2_TextOnlyLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    BLS_Button3->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button3_IconWithLabelButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    BLS_Button3->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button3_IconWithLabelButtonHandlers_onHoverExit, this, std::placeholders::_1));
    BLS_Button3->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button3_IconWithLabelButtonHandlers_onActivate, this, std::placeholders::_1));
    BLS_Button3->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button3_IconWithLabelButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label3->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label3_IconWithLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    BLS_Button4->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button4_TextWithIconButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    BLS_Button4->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button4_TextWithIconButtonHandlers_onHoverExit, this, std::placeholders::_1));
    BLS_Button4->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button4_TextWithIconButtonHandlers_onActivate, this, std::placeholders::_1));
    BLS_Button4->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button4_TextWithIconButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label4->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label4_TextWithIconLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    BLS_Button5->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button5_TextOnlyOutlinedButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    BLS_Button5->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button5_TextOnlyOutlinedButtonHandlers_onHoverExit, this, std::placeholders::_1));
    BLS_Button5->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button5_TextOnlyOutlinedButtonHandlers_onActivate, this, std::placeholders::_1));
    BLS_Button5->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button5_TextOnlyOutlinedButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label5->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label5_TextOnlyOutlinedLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    BLS_Button6->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button6_TextWithIconOutlinedButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    BLS_Button6->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button6_TextWithIconOutlinedButtonHandlers_onHoverExit, this, std::placeholders::_1));
    BLS_Button6->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button6_TextWithIconOutlinedButtonHandlers_onActivate, this, std::placeholders::_1));
    BLS_Button6->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::BLS_Button6_TextWithIconOutlinedButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label6->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label6_TextWithIconOutlinedLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    CBS_Button->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::CBS_Button_CapsuleButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    CBS_Button->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::CBS_Button_CapsuleButtonHandlers_onHoverExit, this, std::placeholders::_1));
    CBS_Button->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::CBS_Button_CapsuleButtonHandlers_onActivate, this, std::placeholders::_1));
    CBS_Button->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::CBS_Button_CapsuleButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label7->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label7_CapsuleLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    RCB_Button->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::RCB_Button_RoundedCornerButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    RCB_Button->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::RCB_Button_RoundedCornerButtonHandlers_onHoverExit, this, std::placeholders::_1));
    RCB_Button->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::RCB_Button_RoundedCornerButtonHandlers_onActivate, this, std::placeholders::_1));
    RCB_Button->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::RCB_Button_RoundedCornerButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label8->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label8_RoundedCornerLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
    SB_Button->onHoverEnterSub(std::bind(&ButtonsLayoutPrefabBase::SB_Button_SquareButtonHandlers_onHoverEnter, this, std::placeholders::_1));
    SB_Button->onHoverExitSub(std::bind(&ButtonsLayoutPrefabBase::SB_Button_SquareButtonHandlers_onHoverExit, this, std::placeholders::_1));
    SB_Button->onActivateSub(std::bind(&ButtonsLayoutPrefabBase::SB_Button_SquareButtonHandlers_onActivate, this, std::placeholders::_1));
    SB_Button->onLongPressSub(std::bind(&ButtonsLayoutPrefabBase::SB_Button_SquareButtonHandlers_onLongPress, this, std::placeholders::_1));
    BES_Label9->onUpdateSub(std::bind(&ButtonsLayoutPrefabBase::BES_Label9_SquareLabelHandler, this, std::placeholders::_1, std::placeholders::_2));
  }

  ButtonsLayoutPrefabBase::~ButtonsLayoutPrefabBase() {
  }

  const PrefabDescriptor& ButtonsLayoutPrefabBase::getPrefabDescriptor() const {
    return classPrefabDescriptor_;
  }

  const PrefabBase::NodeReferences& ButtonsLayoutPrefabBase::getNodeReferences() const {
    return classNodeReferences_;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBLS_Label1() {
    return BLS_Label1;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getBLS_Button1() {
    return BLS_Button1;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label1() {
    return BES_Label1;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getBLS_Button2() {
    return BLS_Button2;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label2() {
    return BES_Label2;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getBLS_Button3() {
    return BLS_Button3;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label3() {
    return BES_Label3;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getBLS_Button4() {
    return BLS_Button4;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label4() {
    return BES_Label4;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getBLS_Button5() {
    return BLS_Button5;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label5() {
    return BES_Label5;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getBLS_Button6() {
    return BLS_Button6;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label6() {
    return BES_Label6;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBLS_Label8() {
    return BLS_Label8;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getCBS_Button() {
    return CBS_Button;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label7() {
    return BES_Label7;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getRCB_Button() {
    return RCB_Button;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label8() {
    return BES_Label8;
  }

  lumin::ui::UiButton* ButtonsLayoutPrefabBase::getSB_Button() {
    return SB_Button;
  }

  lumin::ui::UiText* ButtonsLayoutPrefabBase::getBES_Label9() {
    return BES_Label9;
  }

}
