// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

// %SRC_VERSION%: 2

#include <PrefabBase.h>
#include <PrefabDescriptor.h>

#include <assert.h>

PrefabBase::PrefabBase(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* const root)
:
  extendedPrefabManager_(extendedPrefabManager),
  root_(root) {
}

PrefabBase::~PrefabBase() {
  deleteNodeTree();
}

lumin::Node* PrefabBase::getRoot() const {
  return root_;
}

void PrefabBase::deleteNodeTree() {
  if (root_) {
    if (root_->getParent()) {
      root_->getParent()->removeChild(root_);
    }
    lumin::Node::Delete(root_);
    root_ = nullptr;
  }
}
