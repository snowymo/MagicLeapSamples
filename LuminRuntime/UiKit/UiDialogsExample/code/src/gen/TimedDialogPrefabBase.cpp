// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

// %SRC_VERSION%: 2

#include <TimedDialogPrefabBase.h>
#include <TimedDialogPrefab.h>

namespace prefabs {

  const PrefabDescriptor& TimedDialogPrefabBase::getClassPrefabDescriptor() {
    return classPrefabDescriptor_;
  }

  PrefabBase* TimedDialogPrefabBase::createPrefab(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root) {
    PrefabBase* const prefab = new TimedDialogPrefab(extendedPrefabManager, root);
    return prefab;
  }

  TimedDialogPrefabBase::TimedDialogPrefabBase(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root)
  : PrefabBase(extendedPrefabManager, root) {

    TDN_Dialog = lumin::ui::UiDialog::CastFrom(root->findChild(Names::TDN_Dialog));
    TDN_Label3 = lumin::ui::UiText::CastFrom(root->findChild(Names::TDN_Label3));
    TDN_Slider = lumin::ui::UiSlider::CastFrom(root->findChild(Names::TDN_Slider));

    TDN_Dialog->onTimeExpiredSub(std::bind(&TimedDialogPrefabBase::TDN_Dialog_TimedDialogHandlers_onTimeExpired, this, std::placeholders::_1));
    TDN_Dialog->onUpdateSub(std::bind(&TimedDialogPrefabBase::TDN_Dialog_TimedDialogHandlers_onUpdate, this, std::placeholders::_1, std::placeholders::_2));
  }

  TimedDialogPrefabBase::~TimedDialogPrefabBase() {
  }

  const PrefabDescriptor& TimedDialogPrefabBase::getPrefabDescriptor() const {
    return classPrefabDescriptor_;
  }

  const PrefabBase::NodeReferences& TimedDialogPrefabBase::getNodeReferences() const {
    return classNodeReferences_;
  }

  lumin::ui::UiDialog* TimedDialogPrefabBase::getTDN_Dialog() {
    return TDN_Dialog;
  }

  lumin::ui::UiText* TimedDialogPrefabBase::getTDN_Label3() {
    return TDN_Label3;
  }

  lumin::ui::UiSlider* TimedDialogPrefabBase::getTDN_Slider() {
    return TDN_Slider;
  }

}
