// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

// %SRC_VERSION%: 2

#include <SingleActionDialogPrefabBase.h>
#include <SingleActionDialogPrefab.h>

namespace prefabs {

  const PrefabDescriptor& SingleActionDialogPrefabBase::getClassPrefabDescriptor() {
    return classPrefabDescriptor_;
  }

  PrefabBase* SingleActionDialogPrefabBase::createPrefab(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root) {
    PrefabBase* const prefab = new SingleActionDialogPrefab(extendedPrefabManager, root);
    return prefab;
  }

  SingleActionDialogPrefabBase::SingleActionDialogPrefabBase(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root)
  : PrefabBase(extendedPrefabManager, root) {

    SADN_Dialog = lumin::ui::UiDialog::CastFrom(root->findChild(Names::SADN_Dialog));
    SADN_Button = lumin::ui::UiButton::CastFrom(root->findChild(Names::SADN_Button));

    SADN_Dialog->onConfirmSub(std::bind(&SingleActionDialogPrefabBase::SADN_Dialog_SingleActionDialogHandlers, this, std::placeholders::_1));
    SADN_Button->onActivateSub(std::bind(&SingleActionDialogPrefabBase::SADN_Button_HeartButtonHandlers, this, std::placeholders::_1));
  }

  SingleActionDialogPrefabBase::~SingleActionDialogPrefabBase() {
  }

  const PrefabDescriptor& SingleActionDialogPrefabBase::getPrefabDescriptor() const {
    return classPrefabDescriptor_;
  }

  const PrefabBase::NodeReferences& SingleActionDialogPrefabBase::getNodeReferences() const {
    return classNodeReferences_;
  }

  lumin::ui::UiDialog* SingleActionDialogPrefabBase::getSADN_Dialog() {
    return SADN_Dialog;
  }

  lumin::ui::UiButton* SingleActionDialogPrefabBase::getSADN_Button() {
    return SADN_Button;
  }

}
