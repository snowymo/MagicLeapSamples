// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

// %SRC_VERSION%: 2

#include <SceneDescriptor.h>

SceneDescriptor::SceneDescriptor(int index, const char* name, const char* id, const char* objectModelPath, const char* resourceModelPath, bool initiallyLoaded)
:
  index_(index),
  name_(name),
  id_(id),
  objectModelPath_(objectModelPath),
  resourceModelPath_(resourceModelPath),
  initiallyLoaded_(initiallyLoaded) {
}

int SceneDescriptor::getIndex() const {
  return index_;
}

const std::string& SceneDescriptor::getName() const {
  return name_;
}

const std::string& SceneDescriptor::getId() const {
  return id_;
}

const std::string& SceneDescriptor::getObjectModelPath() const {
  return objectModelPath_;
}

const std::string& SceneDescriptor::getResourceModelPath() const {
  return resourceModelPath_;
}

bool SceneDescriptor::isInitiallyLoaded() const {
  return initiallyLoaded_;
}
