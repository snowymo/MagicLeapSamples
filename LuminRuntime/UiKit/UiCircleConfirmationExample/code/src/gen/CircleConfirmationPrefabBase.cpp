// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING --

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

// %SRC_VERSION%: 2

#include <CircleConfirmationPrefabBase.h>
#include <CircleConfirmationPrefab.h>

namespace prefabs {

  const PrefabDescriptor& CircleConfirmationPrefabBase::getClassPrefabDescriptor() {
    return classPrefabDescriptor_;
  }

  PrefabBase* CircleConfirmationPrefabBase::createPrefab(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root) {
    PrefabBase* const prefab = new CircleConfirmationPrefab(extendedPrefabManager, root);
    return prefab;
  }

  CircleConfirmationPrefabBase::CircleConfirmationPrefabBase(ExtendedPrefabManager* extendedPrefabManager, lumin::Node* root)
  : PrefabBase(extendedPrefabManager, root) {

    CCM_CircleConfirmation = lumin::ui::UiCircleConfirmation::CastFrom(root->findChild(Names::CCM_CircleConfirmation));

    CCM_CircleConfirmation->onConfirmationCanceledSub(std::bind(&CircleConfirmationPrefabBase::CCM_CircleConfirmation_CCM_Handlers_onConfirmationCanceled, this, std::placeholders::_1));
    CCM_CircleConfirmation->onConfirmationCompleteSub(std::bind(&CircleConfirmationPrefabBase::CCM_CircleConfirmation_CCM_Handlers_onConfirmationComplete, this, std::placeholders::_1));
    CCM_CircleConfirmation->onConfirmationUpdateSub(std::bind(&CircleConfirmationPrefabBase::CCM_CircleConfirmation_CCM_Handlers_onConfirmationUpdate, this, std::placeholders::_1, std::placeholders::_2));
    CCM_CircleConfirmation->onActivateSub(std::bind(&CircleConfirmationPrefabBase::CCM_CircleConfirmation_CCM_Handlers_onActivate, this, std::placeholders::_1));
  }

  CircleConfirmationPrefabBase::~CircleConfirmationPrefabBase() {
  }

  const PrefabDescriptor& CircleConfirmationPrefabBase::getPrefabDescriptor() const {
    return classPrefabDescriptor_;
  }

  const PrefabBase::NodeReferences& CircleConfirmationPrefabBase::getNodeReferences() const {
    return classNodeReferences_;
  }

  lumin::ui::UiCircleConfirmation* CircleConfirmationPrefabBase::getCCM_CircleConfirmation() {
    return CCM_CircleConfirmation;
  }

}
